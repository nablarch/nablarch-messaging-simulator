group = 'com.nablarch.tool'
version = '1.1.0'
description = 'メッセージングシミュレータ'

repositories {
  mavenLocal()
  maven { url "${developLibUrl}" }
  jcenter()

  // サードパーティ製ライブラリの格納リポジトリ
  if(project.hasProperty('nablarchExtRepoUrl')) {
     maven { url "${nablarchExtRepoUrl}" }
  }
}

buildscript {
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()
  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:2.2.3"
    classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
  }
}
apply {
  plugin 'com.nablarch.dev.nablarch-build'
  plugin 'com.nablarch.dev.nablarch-sonarqube'
  plugin 'com.nablarch.dev.nablarch-maven-deploy'
  from 'https://github.com/nablarch/nablarch-gradle-plugin/blob/develop/scripts/cobertura/cobertura-0.0.1.gradle?raw=true'
}
apply plugin: "io.spring.dependency-management"

sourceCompatibility=JavaVersion.VERSION_1_6
targetCompatibility=JavaVersion.VERSION_1_6

dependencyManagement {
  imports {
    mavenBom 'com.nablarch.profile:nablarch-bom:5u7'
  }
  applyMavenExclusions false
}

dependencies {
  compile 'com.nablarch.framework:nablarch-fw-messaging-http'
  compile 'com.nablarch.framework:nablarch-fw-messaging-mom'
  compile 'com.nablarch.framework:nablarch-fw-web-extension'
  compile ('com.nablarch.framework:nablarch-testing') {
    exclude group: 'junit', module: 'junit'
  }

  compile 'com.ibm:com.ibm.mq:7.5'
  compile 'com.ibm:com.ibm.mq.commonservices:7.5'
  compile 'com.ibm:com.ibm.mq.headers:7.5'
  compile 'com.ibm:com.ibm.mq.jmqi:7.5'
  compile 'com.ibm:com.ibm.mq.pcf:7.5'
  compile 'javax.resource:connector:1.0'

  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
}

task copyDependency(type:Copy) {
  delete("${projectDir}/src/main/lib")
  from (configurations.compile)
  into "${projectDir}/src/main/lib"
}

task setupBuild(dependsOn: copyDependency) {
  fileTree(dir:"${projectDir}/src/main", includes:['**/*'])
  doLast {
    ant.ant(antfile: 'setup_build.xml', target: 'all', dir: project.file("${projectDir}/src/main"))
  }
}


test {
  ignoreFailures = true
}

wrapper {
  gradleVersion = '2.13'
}
